<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myweb.www.repository.ProductDAO">
	<sql id="search">
		<if test="type != null">
			<trim prefix="and (" suffix=")" prefixOverrides="OR">
				<foreach collection="typeToArr" item="type">
					<trim prefix="OR">
						<choose>
							<when test="type == 'd'.toString()">
								description like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'w'.toString()">
								writer like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'c'.toString()">
								category like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'pn'.toString()">
								pname like concat('%', #{keyword}, '%')
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>

	</sql>
 

	<insert id="insertProduct" parameterType="pvo">
		insert into product
		(category, pname, price, writer, description, made_by)
		values
		(#{category}, #{pname}, #{price}, #{writer}, #{description},
		#{madeBy})
	</insert>


	<select id="selectOneProduct" parameterType="long"
		resultType="pvo">
		select * from product where pno = #{pno}
	</select>
	
	<select id="selectOnePno" resultType="long">
		select max(pno) from product
	</select>

	<select id="selectProductCount" parameterType="pgvo"
		resultType="int">
		select count(pno) from product
		where pno > 0
		<include refid="search" />
	</select>

	<select id="selectProductList" parameterType="pgvo"
		resultType="pvo">
		select p.*
		from
		(select pno from product where pno > 0
		<include refid="search" />
		order by pno desc
		limit #{pageStart}, ${qty}
		) a left join product p on a.pno = p.pno
	</select>

	<update id="updateProduct" parameterType="pvo">
		update product set
		category = #{category},
		pname = #{pname},
		description = #{description},
		made_by = #{madeBy},
		mod_at = now()
		where pno = #{pno}
	</update>

	<update id="updateQtyUp" parameterType="long">
		update product set
		cmt_qty = cmt_qty + 1
		where pno = #{pno}
	</update>

	<update id="updateQtyDown" parameterType="long">
		update product set
		cmt_qty = cmt_qty - 1
		where pno = #{pno}
	</update>

	<update id="updateReadCount" parameterType="long">
		update product set
		read_count = read_count + 1
		where pno = #{pno}
	</update>

	<delete id="deleteProduct" parameterType="long">
		delete from
		product where pno = #{pno}
	</delete>

</mapper>